apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-worker
  labels:
    k8s-app: telegraf
data:
  telegraf.conf: |+
    [agent]
      interval= "10s"
      round_interval= true
      metric_batch_size= 1000
      metric_buffer_limit= 10000
      collection_jitter= "0s"
      flush_interval= "1s"
      flush_jitter= "0s"
      precision= ""
      debug= false
      quiet= true
      logfile= ""
      hostname= "$HOSTNAME"
      omit_hostname= false
    
    [[outputs.prometheus_client]]
          ## Address to listen on.
          listen = ":9127"
          collectors_exclude = ["gocollector", "process"]

    [[inputs.cpu]]
      percpu = true
      totalcpu = true
      collect_cpu_time = false
      report_active = false
      fieldinclude = ["usage_user", "usage_system", "usage_idle", "usage_active", "usage_nice", "usage_iowait", "usage_irq", "usage_softirq", "usage_steal", "usage_guest", "usage_guest_nice"]
    [[inputs.disk]]
      ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs", "loop*"]
      fieldinclude = ["free", "used", "total", "used_percent"]
    [[inputs.diskio]]
      devices = ["sda", "sdb", "sdc", "vda"]
      fieldinclude = ["read_time", "write_time", "reads", "writes", "io_time"]
    [[inputs.mem]]
      fieldinclude = ["available", "free", "total", "used_percent"]
    [[inputs.net]]
      interfaces= ["eth*", "ens*", "eno*"]
      ignore_protocol_stats= true
    [[inputs.system]]
      fieldinclude = ["load1", "load5", "load15"]
    [[inputs.temp]]
    [[inputs.kubernetes]]
      interval = "10s"
      url = "https://$HOSTIP:10250"
      bearer_token_string = "$TELEGRAF_TOKEN"
      insecure_skip_verify = true
      namepass = ["kubernetes_pod_container", "kubernetes_pod_volume", "kubernetes_pod_network"]    
    

---
# Section: Daemonset
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: telegraf-workers
  namespace: monitoring
  labels:
    k8s-app: telegraf
spec:
  selector:
    matchLabels:
      name: telegraf
  template:
    metadata:
      labels:
        name: telegraf
    spec:
      serviceAccountName: telegraf-sa-mon
      hostNetwork: true
      containers:
        - name: telegraf
          image: telegraf:latest
          #args:
          #  - "--user telegraf:$(stat -c '%g' /var/run/docker.sock)"
          resources:
            limits:
              cpu: 100m
              memory: 80Mi
            requests:
              cpu: 25m
              memory: 25Mi
          #securityContext:
          #  runAsUser: 1001
          #  runAsGroup: 1001
          env:
            - name: HOSTIP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: "HOST_PROC"
              value: "/rootfs/proc"
            - name: "HOST_SYS"
              value: "/rootfs/sys"
            - name: "TELEGRAF_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: telegraf-measurement-secret-mon
                  key: token
          volumeMounts:
            - name: sys
              mountPath: /rootfs/sys
              readOnly: true
            - name: proc
              mountPath: /rootfs/proc
              readOnly: true
            - name: utmp
              mountPath: /var/run/utmp
              readOnly: true
            - name: config
              mountPath: /etc/telegraf
      terminationGracePeriodSeconds: 10
      volumes:
        - name: sys
          hostPath:
            path: /sys
        - name: proc
          hostPath:
            path: /proc
        - name: utmp
          hostPath:
            path: /var/run/utmp
        - name: config
          configMap:
            name: telegraf-worker