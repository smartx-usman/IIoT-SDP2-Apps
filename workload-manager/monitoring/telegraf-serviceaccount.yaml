apiVersion: v1
kind: ServiceAccount
metadata:
  name: telegraf-sa-mon
  labels:
    app.kubernetes.io/instance: telegraf
    app.kubernetes.io/name: telegraf

---
apiVersion: v1
kind: Secret
metadata:
  name: telegraf-measurement-secret-mon
  namespace: monitoring
  annotations:
    kubernetes.io/service-account.name: telegraf-sa-mon
type: kubernetes.io/service-account-token

---
# kubernetes_plugin: Give access to stats endpoints
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: k8s-stats-viewer-mon
  labels:
    app.kubernetes.io/instance: telegraf
    app.kubernetes.io/name: telegraf
    rbac.authorization.k8s.io/aggregate-view-telegraf-stats: "true"
rules:
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [ "" ]
    resources: [ "pods", "services", "configmaps", "deployments", "nodes" ]
    verbs: [ "create", "get", "update", "patch", "list", "delete", "watch" ]
  - apiGroups: [ "apps", "extensions" ]
    resources: [ "deployments" ]
    verbs: [ "get", "patch", "delete" ]
  - apiGroups: [""]
    resources: ["nodes/proxy", "nodes/stats"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes", "nodes"]
    verbs: ["get", "list"]

---
# Define global role with the default system:aggregate-to-view cluster role and the two rules we just created
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: k8s-telegraf-mon
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-view-telegraf-stats: "true"
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
rules: [] # Rules are automatically filled in by the controller manager.

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-telegraf-viewer-mon
  labels:
    app.kubernetes.io/instance: telegraf
    app.kubernetes.io/name: telegraf
subjects:
  - kind: ServiceAccount
    name: telegraf-sa-mon
    namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-telegraf-mon

---
kind: Service
apiVersion: v1
metadata:
  name: telegraf-exporter-mon
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9127'
spec:
  selector:
      name: telegraf
  ports:
  - name: telegraf-exporter
    protocol: TCP
    port: 9127
    targetPort: 9127